name: Testing
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-22.04 
    timeout-minutes: 10
    services:
      docker:
        image: docker:20.10.9
        options: --privileged
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # let's start compose up in the background right after clone and move on with next steps
      # there will be later step though checking if compose is up have launched successfully
      - name: docker compose up
        run: sudo docker compose --project-name argylesd --env-file .env up -d mysql fixtures node > var/compose.log & disown  

      - uses: actions/setup-node@v3
        with:
          node-version: 20.17.0
          cache: "yarn"

      - name: test before bringing cache
        if: always()
        run: |
          set -x
          pwd
          ls -la
          ls -la node_modules || true

      - name: test if cache revived?
        if: always()
        run: |
          set -x
          pwd
          ls -la
          ls -la node_modules || true

      - name: Yarn install
        run: yarn install --frozen-lockfile --production=false
      - name: build vite
        run: npm run vite:build
      - name: build server
        run: npm run server:build
      - name: UNIT TESTS
        run: npx jest
      - name: wait for docker compose to be up
        run: TIMEOUTSEC="1000" node .github/healtcheck.js
      - name: docker ps
        run: |
          docker ps
      - uses: actions/checkout@v4
      - name: PRETTIER CHECK
        run: node node_modules/.bin/prettier --config prettier.config.mjs --check .
      - name: docker log
        run: cat var/compose.log

      - name: run tests in docker
        run: |
          docker build -t argylesd:base_stage --target base_stage .
          docker run -i --entrypoint="" argylesd:base_stage npx jest
        
        
