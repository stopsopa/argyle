name: Testing
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    # services:
    #   docker:
    #     image: docker:20.10.9
    #     options: --privileged
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 20.17.0

      - uses: actions/checkout@v4

      # let's start compose up in the background right after clone and move on with next steps
      # there will be later step though checking if compose is up have launched successfully
      - name: docker compose up
        run: sudo docker compose --project-name argylesd --env-file .env up -d mysql fixtures node > var/compose.log & disown

      - name: Yarn install
        run: yarn install --frozen-lockfile --production=false

      - name: build server
        run: npm run server:build

      - name: build vite
        run: npm run vite:build

      - name: unit tests
        run: npx jest

      - name: wait for docker compose to be up
        run: TIMEOUTSEC="120" node .github/healtcheck.js

      - name: docker ps
        run: docker ps

      - name: prettier check
        run: |
          npx prettier --config prettier.config.mjs --check server
          npx prettier --config prettier.config.mjs --check vite
        # normally I would run here npx prettier --config prettier.config.mjs --check .
        # but pipeline was throwing: https://i.imgur.com/BMn468p.png
        # so above was the fastest solution

      - name: docker log
        if: always()
        run: cat var/compose.log

      - name: run tests in docker
        run: |
          docker build -t argylesd:base_stage --target base_stage .
          docker run -i --entrypoint="" argylesd:base_stage npx jest
