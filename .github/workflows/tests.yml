name: Testing
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-22.04 
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.17.0
          cache: "yarn"
      - name: test before bringing cache
        if: always()
        run: |
          set -x
          pwd
          ls -la
          ls -la node_modules || true

      - uses: actions/cache/restore@v3 # https://github.com/actions/cache/blob/main/examples.md#node---yarn
        id: restore-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

          # let's start compose up and move on with next steps
          # there will be later step though checking if compose is up have launched successfully
          - name: docker compose up
            run: docker compose --project-name argylesd --env-file .env up -d | var/compose.log & disown
    

      - name: test if cache revived?
        if: always()
        run: |
          set -x
          pwd
          ls -la
          ls -la node_modules || true

      - name: Yarn install
        run: yarn install --production=false

      - uses: actions/cache/save@v3 # https://github.com/actions/cache/blob/main/caching-strategies.md#reusing-primary-key-from-restore-cache-as-input-to-save-action
        with:
          path: node_modules
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}

      - name: build vite 
        run: npm run vite:build
      - name: build server 
        run: npm run server:build
      - name: UNIT TESTS
        run: npx jest
        
