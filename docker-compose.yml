version: "3.8"
services:
  mysql:
    build:
      context: docker/mysql
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}_mysql
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASS}
      MYSQL_ROOT_HOST: "%"
    volumes:
      - ./docker/mysql/my.cnf:/etc/my.cnf
      - ${MYSQL_DOCKER_DIR:-./docker/mysql_db}/${PROJECT_NAME}:/var/data
    networks:
      - scoped-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  phpmyadmin:
    depends_on:
      mysql:
        condition: service_healthy
    build:
      context: docker/pma
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}_pma
    ports:
      - "${PHPMYADMIN_PORT}:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASS}
      PMA_PMADB: ${PMA_PMADB}
    volumes:
      - ./docker/pma/config.inc.5.1.1.php:/etc/phpmyadmin/config.user.inc.php
    networks:
      - scoped-network

  fixtures:
    depends_on:
      mysql:
        condition: service_healthy
    build:
      context: docker/mysql
      dockerfile: Dockerfile
    image: mysql:fixtures
    container_name: ${PROJECT_NAME}_fixtures
    working_dir: /data
    volumes:
      - ./docker/fixtures/:/data/
      - .env/:/data/.env
    entrypoint: >
      bash -c "      
      /bin/bash fixtures.sh > log.log       
      "
    networks:
      - scoped-network
    restart: "no"

  # load-fixtures:
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #   image: mysql:latest
  #   container_name: ${PROJECT_NAME}_load_fixtures
  #   volumes:
  #     - ./fixtures:/docker-entrypoint-initdb.d
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_PASS}
  #   command: >
  #     sh -c "
  #       for sql_file in /docker-entrypoint-initdb.d/*.sql; do
  #         mysql -h mysql -u root -p${MYSQL_PASS} < $sql_file;
  #       done
  #     "
  #   networks:
  #     - scoped-network

networks:
  scoped-network:
    name: network-${PROJECT_NAME}
