services:
  mysql:
    build:
      context: docker/mysql
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}:mysql
    container_name: ${PROJECT_NAME}_mysql
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASS}
      MYSQL_ROOT_HOST: "%"
    volumes:
      - ./docker/mysql/my.cnf:/etc/my.cnf
      - ${MYSQL_DOCKER_DIR:-./docker/mysql_db}/${PROJECT_NAME}:/var/data
    networks:
      - scoped-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  phpmyadmin:
    depends_on:
      mysql:
        condition: service_healthy
    build:
      context: docker/pma
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}:pma
    container_name: ${PROJECT_NAME}_pma
    ports:
      - "${PMA_PORT}:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASS}
      PMA_PMADB: ${PMA_PMADB}
    volumes:
      - ./docker/pma/config.inc.5.1.1.php:/etc/phpmyadmin/config.user.inc.php
    networks:
      - scoped-network

  fixtures:
    depends_on:
      mysql:
        condition: service_healthy
    build:
      context: docker/mysql
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}:fixtures
    container_name: ${PROJECT_NAME}_fixtures
    working_dir: /data
    volumes:
      - ./shell/:/data/
      - ./.env:/data/.env
    entrypoint: >
      bash -c "      
      /bin/bash fixtures.sh > log.log 2>&1    
      "
    networks:
      - scoped-network
    restart: "no"

  node:
    build:
      context: .
      dockerfile: Dockerfile
      target: image
    image: registry-1.docker.io/${PROJECT_NAME}:node
    container_name: ${PROJECT_NAME}_node
    ports:
      - "${NODE_PORT}:${NODE_PORT}"
    depends_on:
      mysql:
        condition: service_healthy
      fixtures:
        condition: service_completed_successfully
    networks:
      - scoped-network

networks:
  scoped-network:
    name: network-${PROJECT_NAME}
